services:
  thymeleaf-frontend:
    build:
      context: thymeleaf-frontend
      dockerfile: Dockerfile
    container_name: thymeleaf-frontend
    ports:
      - '8094:8094'
    expose:
      - '8094'

  sma-monolithe:
    build: .
    container_name: sma-monolithe
    ports:
      - '8092:8092'
    expose:
      - '8092'
    depends_on:
      - postgres-monolithe
    healthcheck:
      test: ["CMD", "curl", "-f", "http://sma-monolithe:8092/actuator/health"]
      interval: 10s
      retries: 5

  postgres-monolithe:
    image: postgres
#    build:
#      context: .
#      dockerfile: Dockerfile.bdd
    container_name: postgres-monolithe
    volumes:
      - pg_data_monolithe:/var/lib/postgresql/data
      - ./initdb_postgres.sh:/docker-entrypoint-initdb.d/initdb_postgres.sh
    environment:
      POSTGRES_DB: monolithe
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
#      POSTGRES_DB_USER: kiki
#      POSTGRES_DB_PASSWORD: kikipassword
    ports:
      - '50006:50006'
    command: -p 50006
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d monolithe -p 50006" ]
      interval: 10s
      retries: 5

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "6002:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pg@pg.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin_data_monolithe:/var/lib/pgadmin


volumes:
  pg_data_monolithe:
  pgadmin_data_monolithe:
