apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: postgres-monolithe
  name: postgres-monolithe
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-monolithe
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: postgres-monolithe
    spec:
      containers:
        - name: postgres-monolithe
          image: postgres:16.3
          env:
            - name: POSTGRES_DB
              value: monolithe
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: keycloak
          args:
            - -p
            - "50006"
          ports:
#            - containerPort: 5432 # port exposé par le conteneur qui va vers targetPort de postgres-monolithe-service.yaml
            - containerPort: 50006 # port exposé par le conteneur
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "pg_isready -U keycloak -d monolithe -p 50006"
            failureThreshold: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-data-monolithe
            - mountPath: /docker-entrypoint-initdb.d/initdb_postgres.sh
              name: postgres-monolithe-claim1
      restartPolicy: Always
      volumes:
        - name: pg-data-monolithe
          persistentVolumeClaim:
            claimName: pg-data-monolithe
        - name: postgres-monolithe-claim1
          persistentVolumeClaim:
            claimName: postgres-monolithe-claim1
