networks:
  app-network:

services:
#  thymeleaf-frontend:
#    build:
#      context: thymeleaf-frontend
#      dockerfile: Dockerfile
#    container_name: thymeleaf-frontend
#    ports:
#      - '8091:8091'
#    expose:
#      - '8091'
#    depends_on:
#      - sma-monolithe
#    networks:
#      - app-network
#
#  sma-monolithe:
#    build: .
#    container_name: sma-monolithe
#    ports:
#      - '8092:8092'
#    expose:
#      - '8092'
#    environment:
#      POSTGRES_HOST: postgres-monolithe
#      POSTGRES_PORT: 5432
#      POSTGRES_DB: monolithe
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: password
#    depends_on:
#      postgres-monolithe:
#        condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://sma-monolithe:8092/actuator/health" ]
#      interval: 10s
#      retries: 5
#    networks:
#      - app-network

  postgres-monolithe:
    image: postgres
    container_name: postgres-monolithe
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./scripts_db/initdb_postgres.sh:/docker-entrypoint-initdb.d/initdb_postgres.sh
    environment:
      POSTGRES_DB: monolithe
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      retries: 5
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres #type de bd Ã  utiliser
      KC_DB_URL_PORT: 5432
      KC_DB_URL_HOST: postgres-monolithe #nom du service
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./scripts_db/realm-export.json:/opt/keycloak/data/import/sma-realm.json
      - pg_keycloak:/var/lib/postgresql/data
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      postgres-monolithe:
        condition: service_healthy
    networks:
      - app-network

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "6002:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pg@pg.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - app-network

volumes:
  postgres:
  pgadmin:
  pg_keycloak:
