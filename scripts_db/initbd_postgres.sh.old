#!/bin/bash
set -e

# Check if the database directory is empty
if [ "$(ls -A /var/lib/postgresql/data)" ]; then
  echo "PostgreSQL Database directory appears to contain a database; Skipping initialization"
  exit 0
fi

# Wait for PostgreSQL to be ready
until pg_isready -U "$POSTGRES_USER"; do
  echo "Waiting for PostgreSQL to be ready..."
  sleep 2
done

# Create the database if it doesn't exist
psql -U "$POSTGRES_USER" -tc "SELECT 1 FROM pg_database WHERE datname = '${POSTGRES_DB}'" | grep -q 1 || psql -U "$POSTGRES_USER" -c "CREATE DATABASE ${POSTGRES_DB} WITH OWNER ${POSTGRES_USER};"

# Create the user with a password
psql -U "$POSTGRES_USER" -c "CREATE USER ${POSTGRES_USER} WITH ENCRYPTED PASSWORD '${POSTGRES_PASSWORD}';"

# Grant all privileges on the database to the user
psql -U "$POSTGRES_USER" -c "GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO ${POSTGRES_USER};"

# Create the database for Keycloak if it doesn't exist
psql -U "$POSTGRES_USER" -tc "SELECT 1 FROM pg_database WHERE datname = '${KC_DB_URL_DATABASE}'" | grep -q 1 || psql -U "$POSTGRES_USER" -c "CREATE DATABASE ${KC_DB_URL_DATABASE} WITH OWNER ${KC_DB_USERNAME};"

# Create the user with a password for Keycloak
psql -U "$POSTGRES_USER" -c "CREATE USER ${KC_DB_USERNAME} WITH ENCRYPTED PASSWORD '${KC_DB_PASSWORD}';"

# Grant all privileges on the Keycloak database to the user
psql -U "$POSTGRES_USER" -c "GRANT ALL PRIVILEGES ON DATABASE ${KC_DB_URL_DATABASE} TO ${KC_DB_USERNAME};"
